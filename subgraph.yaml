specVersion: 0.0.4
description: >-
  A secure & decentralized way to address resources on and off the blockchain
  using simple, human-readable names. Access domains and transfer history.
repository: "https://github.com/ensdomains/ens-subgraph"
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ENSRegistry
    network: mainnet
    source:
      address: "0xe81a9403E08a181D9a58a2cf17Af7B6F98a1548F"
      abi: EnsRegistry
      startBlock: 2842371
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/ensRegistry.ts
      entities:
        - Domain
        - Account
        - Resolver
      abis:
        - name: EnsRegistry
          file: ./abis/Registry.json
      eventHandlers:
        - event: "OwnerChanged(indexed bytes32,address)"
          handler: handleTransfer
        - event: "SubnNameOwnerChanged(indexed bytes32,indexed bytes32,address)"
          handler: handleNewOwner
        - event: "ResolverChanged(indexed bytes32,address)"
          handler: handleNewResolver
        - event: "TTLChanged(indexed bytes32,uint64)"
          handler: handleNewTTL
  # - kind: ethereum/contract
  #   name: ENSRegistryOld
  #   network: mainnet
  #   source:
  #     address: "0x314159265dd8dbb310642f98f50c066173c1259b"
  #     abi: EnsRegistry
  #     startBlock: 3327417
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/ensRegistry.ts
  #     entities:
  #       - Domain
  #       - Account
  #       - Resolver
  #     abis:
  #       - name: EnsRegistry
  #         file: ./abis/Registry.json
  #     eventHandlers:
  #       - event: "Transfer(indexed bytes32,address)"
  #         handler: handleTransferOldRegistry
  #       - event: "NewOwner(indexed bytes32,indexed bytes32,address)"
  #         handler: handleNewOwnerOldRegistry
  #       - event: "NewResolver(indexed bytes32,address)"
  #         handler: handleNewResolverOldRegistry
  #       - event: "NewTTL(indexed bytes32,uint64)"
  #         handler: handleNewTTLOldRegistry
  - kind: ethereum/contract
    name: Resolver
    network: mainnet
    source:
      abi: Resolver
      startBlock: 2842386
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/resolver.ts
      entities:
        - AddrChanged
        - MulticoinAddrChanged
        - NameChanged
        - AbiChanged
        - PubkeyChanged
        - Textchanged
        - ContenthashChanged
        - InterfaceChanged
        - AuthorisationChanged
      abis:
        - name: Resolver
          file: ./abis/PublicResolver.json
      eventHandlers:
        - event: "ABIChanged(indexed bytes32,indexed uint256)"
          handler: handleABIChanged
        - event: "AddrChanged(indexed bytes32,address)"
          handler: handleAddrChanged
        - event: "AddressChanged(indexed bytes32,uint256,bytes)"
          handler: handleMulticoinAddrChanged
        - event: >-
            AuthorisationChanged(indexed bytes32,indexed address,indexed
            address,bool)
          handler: handleAuthorisationChanged
        - event: "ContenthashChanged(indexed bytes32,bytes)"
          handler: handleContentHashChanged
        - event: "InterfaceChanged(indexed bytes32,indexed bytes4,address)"
          handler: handleInterfaceChanged
        - event: "NameChanged(indexed bytes32,string)"
          handler: handleNameChanged
        - event: "PubkeyChanged(indexed bytes32,bytes32,bytes32)"
          handler: handlePubkeyChanged
        - event: "TextChanged(indexed bytes32,indexed string,string)"
          handler: handleTextChanged
        - event: "TextChanged(indexed bytes32,indexed string,string,string)"
          handler: handleTextChangedWithValue
        - event: "VersionChanged(indexed bytes32,uint64)"
          handler: handleVersionChanged
  - kind: ethereum/contract
    name: BaseRegistrar
    network: mainnet
    source:
      address: "0x7072caeC10E3b169Dbb37dCE7CBC2922D2ad88Ce"
      abi: BaseRegistrar
      startBlock: 2842412
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/ethRegistrar.ts
      entities:
        - Registration
        - NameRegistered
        - NameRenewed
        - NameTransferred
      abis:
        - name: BaseRegistrar
          file: ./abis/BaseRegistrar.json
      eventHandlers:
        - event: "NameRegistered(indexed bytes32,indexed address,uint256)"
          handler: handleNameRegistered
        - event: "NameRenewed(indexed bytes32,uint256)"
          handler: handleNameRenewed
        - event: Transfer(address,indexed address,indexed address,indexed bytes32,bool,bytes)
          handler: handleNameTransferred
  - kind: ethereum/contract
    name: EthRegistrarControllerOld
    network: mainnet
    source:
      address: "0xB80eA06b1352E5E41ab24670E14CBe4C3c555D1B"
      abi: EthRegistrarControllerOld
      startBlock: 2842414
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/ethRegistrar.ts
      entities:
        - Registration
      abis:
        - name: EthRegistrarControllerOld
          file: ./abis/EthRegistrarControllerOld.json
      eventHandlers:
        - event: >-
            NameRegistered(string,indexed bytes32,indexed
            address,uint256,uint256)
          handler: handleNameRegisteredByControllerOld
        # - event: "NameRenewed(string,indexed bytes32,uint256,uint256)"
        #   handler: handleNameRenewedByController
  # - kind: ethereum/contract
  #   name: EthRegistrarController
  #   network: mainnet
  #   source:
  #     address: "0x253553366Da8546fC250F225fe3d25d0C782303b"
  #     abi: EthRegistrarController
  #     startBlock: 16925618
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/ethRegistrar.ts
  #     entities:
  #       - Registration
  #     abis:
  #       - name: EthRegistrarController
  #         file: ./abis/EthRegistrarController.json
  #     eventHandlers:
  #       - event: >-
  #           NameRegistered(string,indexed bytes32,indexed
  #           address,uint256,uint256,uint256)
  #         handler: handleNameRegisteredByController
  #       - event: "NameRenewed(string,indexed bytes32,uint256,uint256)"
  #         handler: handleNameRenewedByController
  # - kind: ethereum/contract
  #   name: NameWrapper
  #   network: mainnet
  #   source:
  #     address: "0xD4416b13d2b3a9aBae7AcD5D6C2BbDBE25686401"
  #     abi: NameWrapper
  #     startBlock: 16925608
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/nameWrapper.ts
  #     entities:
  #       - NameWrapper
  #     abis:
  #       - name: NameWrapper
  #         file: ./abis/NameWrapper.json
  #     eventHandlers:
  #       - event: "NameWrapped(indexed bytes32,bytes,address,uint32,uint64)"
  #         handler: handleNameWrapped
  #       - event: "NameUnwrapped(indexed bytes32,address)"
  #         handler: handleNameUnwrapped
  #       - event: "FusesSet(indexed bytes32,uint32)"
  #         handler: handleFusesSet
  #       - event: "ExpiryExtended(indexed bytes32,uint64)"
  #         handler: handleExpiryExtended
  #       - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
  #         handler: handleTransferSingle
  #       - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
  #         handler: handleTransferBatch